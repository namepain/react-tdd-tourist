{"version":3,"sources":["src/pages/Login/index.js"],"names":["Login","form","getFieldDecorator","validateFields","history","e","preventDefault","err","values","console","log","localStorage","setItem","JSON","stringify","userName","role","push","rules","required","message","color","valuePropName","initialValue","create","name"],"mappings":";;;AAgEe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,wBAAA,IAAA,EAAA,EAAA,QAAA,mBAAA,QAAA,0BAAA,IAAA,EAAA,EAAA,QAAA,qBAAA,QAAA,sBAAA,IAAA,EAAA,EAAA,QAAA,iBAAA,QAAA,uBAAA,IAAA,EAAA,EAAA,QAAA,kBAAA,QAAA,sBAAA,IAAA,EAAA,EAAA,QAAA,iBAhEf,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,oBA+De,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1Df,SAASA,EAAwD,GAAhDC,IAAAA,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,kBAAmBC,EAAAA,EAAAA,eAEpCC,GAAU,EAAhB,EAAA,cAiBE,OAAA,EAAA,QAAA,cAAA,EAAA,QAAA,CAAM,SAfa,SAAAC,GACnBA,EAAEC,iBACFH,EAAe,SAACI,EAAKC,GACdD,IACHE,QAAQC,IAAI,4BAA6BF,GACzCG,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,CAC9CC,SAAU,KACVC,KAAM,aAERZ,EAAQa,KAAK,kBAMa,UAAU,0BACtC,EAAM,QAAA,cAAA,EAAA,QAAA,KACHf,KAAAA,EAAkB,WAAY,CAC7BgB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADpClB,CAGC,EAAA,QAAA,cAAA,EAAA,QAAA,CACE,OAAQ,EAAA,QAAA,cAAA,EAAA,QAAA,CAAM,KAAK,OAAO,MAAO,CAAEmB,MAAO,qBAC1C,YAAY,eAIlB,EAAM,QAAA,cAAA,EAAA,QAAA,KACHnB,KAAAA,EAAkB,WAAY,CAC7BgB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADpClB,CAGC,EAAA,QAAA,cAAA,EAAA,QAAA,CACE,OAAQ,EAAA,QAAA,cAAA,EAAA,QAAA,CAAM,KAAK,OAAO,MAAO,CAAEmB,MAAO,qBAC1C,KAAK,WACL,YAAY,eAIlB,EAAM,QAAA,cAAA,EAAA,QAAA,KACHnB,KAAAA,EAAkB,WAAY,CAC7BoB,cAAe,UACfC,cAAc,GAFfrB,CAGE,EAHF,QAAA,cAAA,EAAA,QAAA,KAAA,gBAID,EAAA,QAAA,cAAA,IAAA,CAAG,UAAU,oBAAoB,KAAK,IALxC,mBAQE,EAAA,QAAA,cAAA,EAAA,QAAA,CAAQ,KAAK,UAAU,SAAS,SAAS,UAAU,qBARrD,UAWK,MAAA,EAAA,QAAA,cAAA,IAAA,CAAG,KAAK,IAXb,mBA3CN,QAAA,eA4De,IAAA,EAAA,EAAKsB,QAAAA,OAAO,CAAEC,KAAM,gBAApB,CAAsCzB,GAAtC,QAAA,QAAA","file":"Login.30a9aeea.js","sourceRoot":"..","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nimport './index.css'\r\n\r\nfunction Login({ form: { getFieldDecorator, validateFields }  }) {\r\n\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        localStorage.setItem('userInfo', JSON.stringify({\r\n          userName: '陈工',\r\n          role: 'bigBoss'\r\n        }))\r\n        history.push('/dashboard')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} className=\"login-form fix__center\">\r\n      <Form.Item>\r\n        {getFieldDecorator('username', {\r\n          rules: [{ required: true, message: 'Please input your username!' }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Username\"\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator('password', {\r\n          rules: [{ required: true, message: 'Please input your Password!' }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator('remember', {\r\n          valuePropName: 'checked',\r\n          initialValue: true,\r\n        })(<Checkbox>Remember me</Checkbox>)}\r\n        <a className=\"login-form-forgot\" href=\"\">\r\n          Forgot password\r\n        </a>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n        Or <a href=\"\">register now!</a>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Form.create({ name: 'normal_login' })(Login)"]}